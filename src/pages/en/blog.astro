---
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import BlogSidebar from '../../components/blog/BlogSidebar.astro';
import { getLangFromUrl, useTranslations } from '../../i18n/utils';

const lang = 'en' as const;
const t = useTranslations(lang);

// Fetch all English blog posts
const allPosts = await getCollection('blog', ({ id }) => {
  return id.startsWith('en/');
});

// Sort by publish date (newest first)
const sortedPosts = allPosts.sort((a, b) =>
  new Date(b.data.publishDate).getTime() - new Date(a.data.publishDate).getTime()
);

// Featured post (first post marked as featured, or latest post)
const featuredPost = sortedPosts.find(post => post.data.featured) || sortedPosts[0];

// Regular posts (excluding featured)
const regularPosts = sortedPosts.filter(post => post.id !== featuredPost?.id);

// Category configuration
const categoryConfig = {
  'why-broken': {
    label: 'Why Broken',
    color: 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200'
  },
  'how-fix': {
    label: 'How to Fix',
    color: 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200'
  },
  'automation': {
    label: 'Automation',
    color: 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200'
  },
  'case-studies': {
    label: 'Case Studies',
    color: 'bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-200'
  },
  'guides': {
    label: 'Guides',
    color: 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200'
  }
} as const;

// Get unique categories
const allCategories = [...new Set(sortedPosts.map(post => post.data.category))];

// Calculate reading time
function calculateReadingTime(content: string): number {
  const wordsPerMinute = 200;
  const wordCount = content.split(/\s+/).length;
  return Math.ceil(wordCount / wordsPerMinute);
}

const seoData = {
  title: 'Blog - Process Automation Guides & Insights | Vecia',
  description: 'Discover how to automate your business processes with no-code tools. Practical guides, case studies, and expert insights to save time and reduce errors.',
  keywords: 'business automation, no-code automation, process optimization, workflow automation, Make.com guides, n8n tutorials, Zapier alternatives',
  ogImage: '/images/og/blog-en.jpg'
};
---

<BaseLayout
  title={seoData.title}
  description={seoData.description}
  keywords={seoData.keywords}
  lang={lang}
  ogImage={seoData.ogImage}
>
  <!-- Blog Header -->
  <section class="bg-gradient-to-br from-primary/5 via-secondary/5 to-accent/5 pt-24 pb-12 md:pt-32 md:pb-16">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <!-- Breadcrumb -->
      <nav class="mb-6" aria-label="Breadcrumb">
        <ol class="flex items-center space-x-2 text-sm text-neutral-600 dark:text-neutral-400">
          <li>
            <a href="/en" class="hover:text-primary transition-colors">Home</a>
          </li>
          <li>
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
            </svg>
          </li>
          <li class="text-neutral-900 dark:text-neutral-100 font-medium">Blog</li>
        </ol>
      </nav>

      <!-- Title Section -->
      <div class="max-w-3xl">
        <h1 class="text-4xl sm:text-5xl lg:text-6xl font-bold text-neutral-900 dark:text-white mb-6">
          Automation Guides & <span class="text-gradient">Insights</span>
        </h1>
        <p class="text-lg sm:text-xl text-neutral-700 dark:text-neutral-300 leading-relaxed">
          Discover how to automate your business processes with no-code tools. Practical guides, case studies, and expert insights to save time and reduce errors.
        </p>
      </div>
    </div>
  </section>

  <!-- Blog Content -->
  <section class="py-12 md:py-16 lg:py-20">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="grid grid-cols-1 lg:grid-cols-[1fr_350px] gap-8 lg:gap-12">
        <!-- Main Content -->
        <div>
          <!-- Search & Filter Bar -->
          <div
            class="mb-8 space-y-4"
            x-data="{
              searchQuery: '',
              selectedCategory: 'all',
              posts: [],
              filteredCount: 0,
              totalCount: 0,

              init() {
                // Get all post elements
                this.posts = Array.from(document.querySelectorAll('[data-post]')).map(el => ({
                  element: el,
                  title: el.dataset.title?.toLowerCase() || '',
                  description: el.dataset.description?.toLowerCase() || '',
                  category: el.dataset.category || ''
                }));
                this.totalCount = this.posts.length;
                this.filteredCount = this.totalCount;
              },

              filterPosts() {
                const query = this.searchQuery.toLowerCase();
                let visibleCount = 0;

                this.posts.forEach(post => {
                  const matchesSearch = !query ||
                    post.title.includes(query) ||
                    post.description.includes(query);

                  const matchesCategory = this.selectedCategory === 'all' ||
                    post.category === this.selectedCategory;

                  const isVisible = matchesSearch && matchesCategory;
                  post.element.style.display = isVisible ? '' : 'none';

                  if (isVisible) visibleCount++;
                });

                this.filteredCount = visibleCount;
              }
            }"
            @input.debounce.300ms="filterPosts()"
          >
            <!-- Search Bar -->
            <div class="relative">
              <input
                type="text"
                x-model="searchQuery"
                placeholder="Search articles by title or keyword..."
                class="w-full px-4 py-3 pl-12 rounded-xl border-2 border-neutral-200 dark:border-neutral-700 bg-white dark:bg-neutral-800 text-neutral-900 dark:text-white placeholder-neutral-500 focus:border-primary focus:ring-2 focus:ring-primary/20 transition-all"
                aria-label="Search articles"
              />
              <svg
                class="absolute left-4 top-1/2 -translate-y-1/2 w-5 h-5 text-neutral-400"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
              </svg>
            </div>

            <!-- Category Filters -->
            <div class="flex flex-wrap gap-2">
              <button
                @click="selectedCategory = 'all'; filterPosts()"
                :class="selectedCategory === 'all' ? 'bg-primary text-white' : 'bg-neutral-100 dark:bg-neutral-800 text-neutral-700 dark:text-neutral-300 hover:bg-neutral-200 dark:hover:bg-neutral-700'"
                class="px-4 py-2 rounded-lg font-medium transition-all"
              >
                All Articles
              </button>
              {allCategories.map(category => (
                <button
                  @click={`selectedCategory = '${category}'; filterPosts()`}
                  :class={`selectedCategory === '${category}' ? 'bg-primary text-white' : 'bg-neutral-100 dark:bg-neutral-800 text-neutral-700 dark:text-neutral-300 hover:bg-neutral-200 dark:hover:bg-neutral-700'`}
                  class="px-4 py-2 rounded-lg font-medium transition-all"
                >
                  {categoryConfig[category as keyof typeof categoryConfig]?.label || category}
                </button>
              ))}
            </div>

            <!-- Results Count -->
            <div class="text-sm text-neutral-600 dark:text-neutral-400">
              <span x-text="filteredCount"></span> <span x-show="filteredCount !== totalCount">of <span x-text="totalCount"></span></span> article<span x-show="filteredCount !== 1">s</span>
            </div>
          </div>

          <!-- Featured Article -->
          {featuredPost && (
            <article
              class="mb-12 group"
              data-post
              data-title={featuredPost.data.title}
              data-description={featuredPost.data.description}
              data-category={featuredPost.data.category}
            >
              <a
                href={`/en/blog/${featuredPost.id.replace('en/', '')}`}
                class="block relative rounded-2xl overflow-hidden bg-neutral-100 dark:bg-neutral-800 shadow-lg hover:shadow-2xl transition-all duration-300"
              >
                <!-- Featured Badge -->
                <div class="absolute top-4 left-4 z-10">
                  <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-semibold bg-accent text-white shadow-lg">
                    <svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20">
                      <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                    </svg>
                    Featured
                  </span>
                </div>

                <!-- Image (placeholder) -->
                <div class="aspect-[21/9] bg-gradient-to-br from-primary/20 via-secondary/20 to-accent/20 flex items-center justify-center">
                  {featuredPost.data.image ? (
                    <img
                      src={featuredPost.data.image}
                      alt={featuredPost.data.title}
                      class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
                    />
                  ) : (
                    <svg class="w-24 h-24 text-primary/30" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
                    </svg>
                  )}
                </div>

                <!-- Content -->
                <div class="p-6 md:p-8">
                  <!-- Category & Reading Time -->
                  <div class="flex items-center gap-3 mb-4">
                    <span class={`inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold ${categoryConfig[featuredPost.data.category as keyof typeof categoryConfig]?.color || 'bg-neutral-200 text-neutral-800'}`}>
                      {categoryConfig[featuredPost.data.category as keyof typeof categoryConfig]?.label || featuredPost.data.category}
                    </span>
                    <span class="text-sm text-neutral-600 dark:text-neutral-400 flex items-center">
                      <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                      </svg>
                      {calculateReadingTime(featuredPost.body)} min read
                    </span>
                  </div>

                  <!-- Title -->
                  <h2 class="text-2xl md:text-3xl font-bold text-neutral-900 dark:text-white mb-3 group-hover:text-primary transition-colors">
                    {featuredPost.data.title}
                  </h2>

                  <!-- Description -->
                  <p class="text-neutral-700 dark:text-neutral-300 mb-4 leading-relaxed">
                    {featuredPost.data.description}
                  </p>

                  <!-- Meta -->
                  <div class="flex items-center text-sm text-neutral-600 dark:text-neutral-400">
                    <span>{featuredPost.data.author}</span>
                    <span class="mx-2">•</span>
                    <time datetime={featuredPost.data.publishDate.toISOString()}>
                      {new Date(featuredPost.data.publishDate).toLocaleDateString('en-US', {
                        year: 'numeric',
                        month: 'long',
                        day: 'numeric'
                      })}
                    </time>
                  </div>
                </div>
              </a>
            </article>
          )}

          <!-- Article Grid -->
          <div class="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-6">
            {regularPosts.map(post => (
              <article
                class="group"
                data-post
                data-title={post.data.title}
                data-description={post.data.description}
                data-category={post.data.category}
              >
                <a
                  href={`/en/blog/${post.id.replace('en/', '')}`}
                  class="block h-full rounded-xl overflow-hidden bg-white dark:bg-neutral-800 shadow-md hover:shadow-xl transition-all duration-300 border border-neutral-200 dark:border-neutral-700"
                >
                  <!-- Image (placeholder) -->
                  <div class="aspect-[16/9] bg-gradient-to-br from-primary/10 via-secondary/10 to-accent/10 flex items-center justify-center overflow-hidden">
                    {post.data.image ? (
                      <img
                        src={post.data.image}
                        alt={post.data.title}
                        class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
                      />
                    ) : (
                      <svg class="w-16 h-16 text-primary/30" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
                      </svg>
                    )}
                  </div>

                  <!-- Content -->
                  <div class="p-5">
                    <!-- Category & Reading Time -->
                    <div class="flex items-center gap-2 mb-3">
                      <span class={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-semibold ${categoryConfig[post.data.category as keyof typeof categoryConfig]?.color || 'bg-neutral-200 text-neutral-800'}`}>
                        {categoryConfig[post.data.category as keyof typeof categoryConfig]?.label || post.data.category}
                      </span>
                      <span class="text-xs text-neutral-600 dark:text-neutral-400 flex items-center">
                        <svg class="w-3.5 h-3.5 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                        </svg>
                        {calculateReadingTime(post.body)} min
                      </span>
                    </div>

                    <!-- Title -->
                    <h3 class="text-lg font-bold text-neutral-900 dark:text-white mb-2 group-hover:text-primary transition-colors line-clamp-2">
                      {post.data.title}
                    </h3>

                    <!-- Description -->
                    <p class="text-sm text-neutral-700 dark:text-neutral-300 mb-4 line-clamp-3">
                      {post.data.description}
                    </p>

                    <!-- Meta -->
                    <div class="flex items-center text-xs text-neutral-600 dark:text-neutral-400">
                      <time datetime={post.data.publishDate.toISOString()}>
                        {new Date(post.data.publishDate).toLocaleDateString('en-US', {
                          year: 'numeric',
                          month: 'short',
                          day: 'numeric'
                        })}
                      </time>
                    </div>
                  </div>
                </a>
              </article>
            ))}
          </div>

          <!-- No Results Message -->
          <div
            x-data
            x-show="document.querySelectorAll('[data-post]').length === 0 || Array.from(document.querySelectorAll('[data-post]')).every(el => el.style.display === 'none')"
            x-cloak
            class="text-center py-12"
          >
            <svg class="w-16 h-16 mx-auto text-neutral-400 dark:text-neutral-600 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
            <p class="text-lg text-neutral-600 dark:text-neutral-400 mb-2">No articles found</p>
            <p class="text-sm text-neutral-500 dark:text-neutral-500">Try adjusting your search or filters</p>
          </div>
        </div>

        <!-- Sidebar -->
        <aside class="lg:sticky lg:top-8 self-start">
          <BlogSidebar lang={lang} />
        </aside>
      </div>
    </div>
  </section>
</BaseLayout>

<style>
  .text-gradient {
    @apply bg-clip-text text-transparent bg-gradient-to-r from-primary via-secondary to-accent;
  }

  [x-cloak] {
    display: none !important;
  }

  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
