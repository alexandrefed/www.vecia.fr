---
/**
 * BlogHeader Component
 *
 * Displays article metadata at the top of blog posts:
 * - Title, author, publish date
 * - Reading time calculation
 * - Category badge with color coding
 * - Breadcrumb navigation
 * - Tags display
 *
 * Props:
 * - title: Article title
 * - description: Article description (for meta)
 * - author: Author name
 * - publishDate: Publish date (Date object)
 * - category: Category slug
 * - tags: Array of tag strings
 * - lang: Language code ('fr' | 'en')
 * - content: Article content (for reading time calculation)
 */

import type { Language } from '../../i18n/ui';

interface Props {
  title: string;
  description: string;
  author: string;
  publishDate: Date;
  category: 'why-broken' | 'success-stories' | 'quick-wins' | 'industry-deep-dives' | 'tool-comparisons';
  tags: string[];
  lang: Language;
  content: string; // Raw markdown content for word count
}

const { title, description, author, publishDate, category, tags, lang, content } = Astro.props;

// Calculate reading time (200 words per minute - 2025 standard)
const wordCount = content.split(/\s+/).length;
const readingTime = Math.ceil(wordCount / 200);

// Category translations and colors
const categoryConfig = {
  'why-broken': {
    fr: { label: 'Pourquoi Cassé', color: 'bg-red-100 text-red-700 border-red-300' },
    en: { label: 'Why Broken', color: 'bg-red-100 text-red-700 border-red-300' }
  },
  'success-stories': {
    fr: { label: 'Succès Client', color: 'bg-green-100 text-green-700 border-green-300' },
    en: { label: 'Success Stories', color: 'bg-green-100 text-green-700 border-green-300' }
  },
  'quick-wins': {
    fr: { label: 'Victoires Rapides', color: 'bg-blue-100 text-blue-700 border-blue-300' },
    en: { label: 'Quick Wins', color: 'bg-blue-100 text-blue-700 border-blue-300' }
  },
  'industry-deep-dives': {
    fr: { label: 'Analyses Sectorielles', color: 'bg-purple-100 text-purple-700 border-purple-300' },
    en: { label: 'Industry Deep Dives', color: 'bg-purple-100 text-purple-700 border-purple-300' }
  },
  'tool-comparisons': {
    fr: { label: 'Comparaisons d\'Outils', color: 'bg-orange-100 text-orange-700 border-orange-300' },
    en: { label: 'Tool Comparisons', color: 'bg-orange-100 text-orange-700 border-orange-300' }
  }
};

const categoryData = categoryConfig[category][lang];

// Format date
const formattedDate = publishDate.toLocaleDateString(lang === 'fr' ? 'fr-FR' : 'en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
});

// Breadcrumb paths
const blogPath = lang === 'fr' ? '/blog' : '/en/blog';
const blogLabel = lang === 'fr' ? 'Blog' : 'Blog';
const homeLabel = lang === 'fr' ? 'Accueil' : 'Home';
const homePath = lang === 'fr' ? '/' : '/en/';

// Reading time translation
const readingTimeLabel = lang === 'fr' ? 'min de lecture' : 'min read';
---

<!-- Breadcrumb Navigation -->
<nav class="mb-6" aria-label="Breadcrumb">
  <ol class="flex items-center space-x-2 text-sm text-text/60">
    <li>
      <a href={homePath} class="hover:text-primary transition-colors">
        {homeLabel}
      </a>
    </li>
    <li>
      <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
        <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
      </svg>
    </li>
    <li>
      <a href={blogPath} class="hover:text-primary transition-colors">
        {blogLabel}
      </a>
    </li>
    <li>
      <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
        <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
      </svg>
    </li>
    <li class="text-text font-medium" aria-current="page">
      {title.length > 50 ? title.substring(0, 50) + '...' : title}
    </li>
  </ol>
</nav>

<!-- Article Header -->
<header class="mb-8">
  <!-- Category Badge -->
  <div class="mb-4">
    <span class={`inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold border ${categoryData.color}`}>
      {categoryData.label}
    </span>
  </div>

  <!-- Title -->
  <h1 class="text-4xl md:text-5xl lg:text-6xl font-heading font-bold text-text leading-tight mb-4">
    {title}
  </h1>

  <!-- Description -->
  {description && (
    <p class="text-xl text-text/70 leading-relaxed mb-6 max-w-3xl">
      {description}
    </p>
  )}

  <!-- Metadata Row -->
  <div class="flex flex-wrap items-center gap-4 text-sm text-text/60 mb-6">
    <!-- Author -->
    <div class="flex items-center">
      <svg class="w-5 h-5 mr-2 text-text/40" fill="currentColor" viewBox="0 0 20 20">
        <path fill-rule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" clip-rule="evenodd" />
      </svg>
      <span class="font-medium text-text/80">{author}</span>
    </div>

    <!-- Divider -->
    <span class="text-text/30">•</span>

    <!-- Publish Date -->
    <div class="flex items-center">
      <svg class="w-5 h-5 mr-2 text-text/40" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
      </svg>
      <time datetime={publishDate.toISOString()}>
        {formattedDate}
      </time>
    </div>

    <!-- Divider -->
    <span class="text-text/30">•</span>

    <!-- Reading Time -->
    <div class="flex items-center">
      <svg class="w-5 h-5 mr-2 text-text/40" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
      </svg>
      <span>{readingTime} {readingTimeLabel}</span>
    </div>
  </div>

  <!-- Tags -->
  {tags.length > 0 && (
    <div class="flex flex-wrap gap-2">
      {tags.map((tag) => (
        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-gray-100 text-gray-700 border border-gray-200 hover:bg-gray-200 transition-colors">
          <svg class="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M17.707 9.293a1 1 0 010 1.414l-7 7a1 1 0 01-1.414 0l-7-7A.997.997 0 012 10V5a3 3 0 013-3h5c.256 0 .512.098.707.293l7 7zM5 6a1 1 0 100-2 1 1 0 000 2z" clip-rule="evenodd" />
          </svg>
          {tag}
        </span>
      ))}
    </div>
  )}
</header>

<!-- Divider -->
<div class="border-t border-gray-200 mb-8"></div>
