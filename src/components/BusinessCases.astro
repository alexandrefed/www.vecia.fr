---
import { ui } from '../i18n/ui';

interface Props {
  lang?: 'fr' | 'en';
}

const { lang = 'fr' } = Astro.props;
const t = ui[lang];

// Image paths for each case study
const imageMap = [
  '/images/case-ecommerce.png',
  '/images/case-education.png',
  '/images/case-services.png',
  '/images/case-logistics.png',
];

// Build case studies array from translations
const cases = [
  {
    industry: t['cases.case1.industry'],
    headline: t['cases.case1.headline'],
    headlineHighlight: t['cases.case1.headlineHighlight'],
    challenge: t['cases.case1.challenge'],
    solution: t['cases.case1.solution'],
    result: t['cases.case1.result'],
    metric: t['cases.case1.metric'],
    metricLabel: t['cases.case1.metricLabel'],
    impact: t['cases.case1.impact'],
    image: imageMap[0],
    aspectRatio: '3/2', // Landscape
    gridClass: 'md:grid-cols-[40%_60%]',
  },
  {
    industry: t['cases.case2.industry'],
    headline: t['cases.case2.headline'],
    headlineHighlight: t['cases.case2.headlineHighlight'],
    challenge: t['cases.case2.challenge'],
    solution: t['cases.case2.solution'],
    result: t['cases.case2.result'],
    metric: t['cases.case2.metric'],
    metricLabel: t['cases.case2.metricLabel'],
    impact: t['cases.case2.impact'],
    image: imageMap[1],
    aspectRatio: '1/1', // Square
    gridClass: 'md:grid-cols-[40%_60%]',
  },
  {
    industry: t['cases.case3.industry'],
    headline: t['cases.case3.headline'],
    headlineHighlight: t['cases.case3.headlineHighlight'],
    challenge: t['cases.case3.challenge'],
    solution: t['cases.case3.solution'],
    result: t['cases.case3.result'],
    metric: t['cases.case3.metric'],
    metricLabel: t['cases.case3.metricLabel'],
    impact: t['cases.case3.impact'],
    image: imageMap[2],
    aspectRatio: '2/3', // Portrait
    gridClass: 'md:grid-cols-[35%_65%]',
  },
  {
    industry: t['cases.case4.industry'],
    headline: t['cases.case4.headline'],
    headlineHighlight: t['cases.case4.headlineHighlight'],
    challenge: t['cases.case4.challenge'],
    solution: t['cases.case4.solution'],
    result: t['cases.case4.result'],
    metric: t['cases.case4.metric'],
    metricLabel: t['cases.case4.metricLabel'],
    impact: t['cases.case4.impact'],
    image: imageMap[3],
    aspectRatio: '3/2', // Landscape
    gridClass: 'md:grid-cols-[40%_60%]',
  },
];
---

<!-- Business Cases Carousel Section -->
<section class="relative bg-background py-20 px-8">
  <div class="max-w-7xl mx-auto">

    <!-- Section Header -->
    <div class="text-center mb-12">
      <h2 class="font-display text-4xl md:text-5xl font-bold text-gray-800 mb-4">
        <span class="title-icon"></span>{t['cases.sectionTitle']}
        <span class="bg-gradient-to-r from-primary to-secondary bg-clip-text text-transparent">
          {t['cases.sectionTitleHighlight']}
        </span>
      </h2>
      <p class="text-lg text-gray-600 max-w-3xl mx-auto">
        {t['cases.sectionSubtitle']}
      </p>
    </div>

    <!-- Tab Navigation System with Alpine.js -->
    <div
      x-data="{
        activeTab: 0,
        enteringSlide: null,

        selectTab(index) {
          this.activeTab = index;
          // Smooth scroll page to bring the selected panel into view
          const targetPanel = this.$refs['panel' + index];
          targetPanel.scrollIntoView({
            behavior: 'smooth',
            block: 'center'
          });
        },

        setEntering(index) {
          this.enteringSlide = index;
        },

        setActive(index) {
          this.activeTab = index;
          this.enteringSlide = null;
        },

        setExiting(index) {
          if (this.activeTab === index) {
            this.enteringSlide = null;
          }
        }
      }"
      class="max-w-6xl mx-auto"
    >

      <!-- Tab Bar -->
      <div class="flex gap-3 justify-center mb-8 flex-wrap">
        {cases.map((caseStudy, index) => (
          <button
            @click={`selectTab(${index})`}
            :class={`activeTab === ${index} ? 'bg-gradient-to-r from-secondary to-primary text-white shadow-lg' : 'bg-transparent text-gray-600 hover:bg-gray-100'`}
            class="px-4 py-2 rounded-lg font-semibold text-sm whitespace-nowrap transition-all duration-300 hover:scale-105"
          >
            {caseStudy.industry}
          </button>
        ))}
      </div>

      <!-- Sticky Container for Stacked Cards Effect -->
      <div class="relative" style="height: calc(700px * 4);">

        <!-- Content Panels - Stacked at Same Position -->
        {cases.map((caseStudy, index) => (
          <div
            x-ref={'panel' + index}
            x-intersect.threshold.10={`setEntering(${index})`}
            x-intersect.threshold.70={`setActive(${index})`}
            x-intersect:leave={`setExiting(${index})`}
            class="sticky top-20 h-[700px] flex items-center justify-center transition-all duration-[800ms]"
            :class={`{
              'opacity-40 scale-95': enteringSlide === ${index} && activeTab !== ${index},
              'opacity-100 scale-100': activeTab === ${index},
              'opacity-20 scale-95': activeTab !== ${index} && enteringSlide !== ${index}
            }`}
          >

            <!-- Panel Content -->
            <div class={`bg-white rounded-2xl shadow-2xl shadow-secondary/30 border-2 border-gray-100 w-full max-w-5xl mx-auto grid grid-cols-1 ${index % 2 === 1 ? (caseStudy.gridClass === 'md:grid-cols-[35%_65%]' ? 'md:grid-cols-[65%_35%]' : 'md:grid-cols-[60%_40%]') : caseStudy.gridClass} overflow-hidden`}>

              <!-- Image Column -->
              <div class={`relative h-[250px] md:h-auto bg-gradient-to-br from-primary/5 to-secondary/5 flex items-center justify-center p-6 ${index % 2 === 1 ? 'md:order-2' : ''}`}>
                <img
                  src={caseStudy.image}
                  alt={`${caseStudy.industry} automation case study`}
                  class="max-w-full max-h-full object-contain rounded-xl"
                  style={`aspect-ratio: ${caseStudy.aspectRatio}`}
                />
              </div>

              <!-- Content Column -->
              <div class={`p-6 md:p-6 lg:p-8 ${index % 2 === 1 ? 'md:order-1' : ''}`}>

              <!-- Industry Badge -->
              <div class="inline-block mb-4">
                <span class={`px-4 py-1 rounded-full text-sm font-bold text-white ${
                  index === 0 ? 'bg-gradient-to-r from-primary to-secondary' :
                  index === 1 ? 'bg-gradient-to-r from-secondary to-accent1' :
                  index === 2 ? 'bg-gradient-to-r from-accent1 to-accent2' :
                  'bg-gradient-to-r from-accent2 to-primary'
                }`}>
                  {caseStudy.industry}
                </span>
              </div>

              <!-- Headline -->
              <h3 class="font-display text-xl md:text-2xl font-bold text-gray-800 mb-4">
                {caseStudy.headline}{' '}
                <span class="bg-gradient-to-r from-primary to-secondary bg-clip-text text-transparent">
                  {caseStudy.headlineHighlight}
                </span>
              </h3>

              <!-- Challenge / Solution / Result Grid -->
              <div class="grid md:grid-cols-3 gap-3 mb-6">

                <!-- Challenge -->
                <div class="bg-gradient-to-br from-primary/10 to-primary/5 rounded-lg p-4">
                  <h4 class="font-bold text-sm text-primary mb-2 flex items-center gap-2">
                    <i class="hgi-stroke hgi-alert-circle text-lg"></i>
                    {lang === 'fr' ? 'Défi' : 'Challenge'}
                  </h4>
                  <p class="text-sm text-gray-700 leading-relaxed">
                    {caseStudy.challenge}
                  </p>
                </div>

                <!-- Solution -->
                <div class="bg-gradient-to-br from-secondary/10 to-secondary/5 rounded-lg p-4">
                  <h4 class="font-bold text-sm text-secondary mb-2 flex items-center gap-2">
                    <i class="hgi-stroke hgi-settings-02 text-lg"></i>
                    Solution
                  </h4>
                  <p class="text-sm text-gray-700 leading-relaxed">
                    {caseStudy.solution}
                  </p>
                </div>

                <!-- Result -->
                <div class="bg-gradient-to-br from-accent1/10 to-accent1/5 rounded-lg p-4">
                  <h4 class="font-bold text-sm text-accent1 mb-2 flex items-center gap-2">
                    <i class="hgi-stroke hgi-checkmark-circle-02 text-lg"></i>
                    {lang === 'fr' ? 'Résultat' : 'Result'}
                  </h4>
                  <p class="text-sm text-gray-700 leading-relaxed">
                    {caseStudy.result}
                  </p>
                </div>
              </div>

              <!-- Metric Highlight -->
              <div class="text-center py-4 bg-gradient-to-br from-secondary/10 to-primary/5 rounded-xl">
                <div class="text-4xl md:text-5xl font-bold bg-gradient-to-r from-primary to-secondary bg-clip-text text-transparent mb-1">
                  {caseStudy.metric}
                </div>
                <p class="text-base font-semibold text-gray-800 mb-1">
                  {caseStudy.metricLabel}
                </p>
                <p class="text-xs text-gray-600">
                  {caseStudy.impact}
                </p>
              </div>

              </div> <!-- End Content Column -->

            </div>
          </div>
        ))}

      </div> <!-- End Vertical Scroll Container -->

    </div>

  </div>
</section>
