# Supabase Configuration for www.vecia.fr Blog Comments
# Generated: 2025-10-10
#
# Copy this file to your frontend project as .env.local (or .env)
# Replace VITE_ prefix with your framework's prefix if needed:
#   - Vite/Vue: VITE_
#   - Next.js: NEXT_PUBLIC_
#   - Create React App: REACT_APP_

# Supabase API URL (Kong Gateway)
VITE_SUPABASE_URL=http://85.25.172.47:8100

# Supabase Anonymous Key (public, safe for frontend)
VITE_SUPABASE_ANON_KEY=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlIjoiYW5vbiIsImlzcyI6InN1cGFiYXNlLWRlbW8iLCJpYXQiOjE2NDE3NjkyMDAsImV4cCI6MTc5OTUzNTYwMH0.Jp4HPK5Cr7GM2j5eu4SMSYrmyPnL_moGV_olTHvcZbQ

# =============================================================================
# IMPORTANT SECURITY NOTES:
# =============================================================================
# 1. The ANON_KEY is safe to expose in frontend code - it has limited permissions
# 2. Row Level Security (RLS) is enabled on the comments table
# 3. Public users can only:
#    - READ approved comments
#    - INSERT new comments (auto-approved by default)
# 4. UPDATE/DELETE operations are restricted (admin-only)
#
# =============================================================================
# OPTIONAL: Setup HTTPS Access
# =============================================================================
# If you want to use HTTPS instead of HTTP, you can:
# 1. Configure nginx reverse proxy: api.vecia.fr -> localhost:8100
# 2. Generate SSL certificate with Let's Encrypt
# 3. Update VITE_SUPABASE_URL to: https://api.vecia.fr
#
# =============================================================================
# DATABASE TABLE: comments
# =============================================================================
# Table structure:
#   - id (uuid) - Primary key
#   - article_slug (text) - Blog post identifier
#   - author_name (text) - Commenter name (1-100 chars)
#   - author_email (text) - Optional email
#   - comment_text (text) - Comment content (1-5000 chars)
#   - parent_comment_id (uuid) - For nested replies
#   - is_vecia_member (boolean) - Flag for verified members
#   - created_at (timestamp) - Auto-generated timestamp
#   - approved (boolean) - Moderation flag (default: true)
#
# =============================================================================
# EXAMPLE USAGE (JavaScript/TypeScript):
# =============================================================================
# import { createClient } from '@supabase/supabase-js'
#
# const supabase = createClient(
#   import.meta.env.VITE_SUPABASE_URL,
#   import.meta.env.VITE_SUPABASE_ANON_KEY
# )
#
# // Fetch comments for an article
# const { data, error } = await supabase
#   .from('comments')
#   .select('*')
#   .eq('article_slug', 'my-blog-post')
#   .order('created_at', { ascending: false })
#
# // Insert a new comment
# const { data, error } = await supabase
#   .from('comments')
#   .insert({
#     article_slug: 'my-blog-post',
#     author_name: 'John Doe',
#     author_email: 'john@example.com',
#     comment_text: 'Great article!'
#   })
#
# =============================================================================
# DIRECT DATABASE CONNECTION (Optional - for admin tools):
# =============================================================================
# If you need direct database access (psql, admin scripts):
# Host: 85.25.172.47
# Port: 5435 (Supavisor pooler) or 5432 (direct, internal only)
# Database: postgres
# User: postgres
# Password: bs1ClhIb8FFXqQc4qQvoa6pH2SXoEZ9b
#
# Note: Direct database access should only be used for admin tasks,
# not for frontend applications. Always use the Supabase API for frontend.
